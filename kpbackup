#!/bin/bash

if [ $UID != 0 ]; then
 	echo >&2 "You must be root - try sudo"
	exit 1
fi
kploc=/ssd/KeePass
bckmnt=/root/backups
bckloc=$bckmnt/backup-raspi/keepass
needtoumount=0

mcheck=$(grep "$bckmnt fuse.gocryptfs" /proc/mounts)
if [ "$mcheck" == "" ]; then
	echo "Mounting cloud backup drive"
	/usr/local/bin/cbackup -c v -m || (echo aborting because mount failed;exit 4)
	needtoumount=1
fi

ts=$(date +%Y%m%d-%H%M%S)

prv=$PWD
cd  $kploc
# repace newline chars with
# blanks in find's output
tosave=${1:-$(find . -mtime -1 -name '*.kdbx*'|tr \\n ' ')}|awk '{printf "\"%s\" ",$0}'
if ! [ "$tosave" == "" ]; then
	echo "attempting to save $tosave"
	tar czf $bckloc/keepass.$ts.tgz $tosave&&echo "save done: $tosave"
else
	echo "nothing to save"
fi
cd $prv
echo cleaning up ...
find $bckloc -maxdepth 1 -type f -mtime +6 -name 'keepass.*.tgz' -exec rm -v \{\} \;

if [ $needtoumount == 1 ]; then
	echo "umounting cloud backup drive"
	/usr/local/bin/cbackup -c v -u
fi
exit
